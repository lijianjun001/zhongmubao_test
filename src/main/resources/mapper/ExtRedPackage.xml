<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhongmubao.api.dao.ExtRedPackageDao">

    <select id="getEffectiveExtRedPackageByCustomerIdAndId" resultType="ExtRedPackage">
		select * from ExtRedPackage where
		customerid = #{customerId}
		and id =#{id}
		and expTime>now()
		and SheepOrderId>=0
		and isused = 0 limit 1
	</select>

    <insert id="insertExtRedPackage">
		INSERT ignore INTO ExtRedPackage (
		CustomerId,
		Type,
		SheepOrderId,
		IsLock,
		Price,
		IsUsed,
		UsedTime,
		SheepDay,
		ExpTime,
		Modified,
		Created,
		MinSheepCount
		)
		VALUES (
		#{customerId},
		#{type},
		#{sheepOrderId},
		#{isLock},
		#{price},
		#{isUsed},
		#{usedTime},
		#{sheepDay},
		#{expTime},
		#{modified},
		#{created},
		#{minSheepCount}
		)
	</insert>

    <select id="countExtRedPackageByCustomerIdAndBeginTimeAndEndTimeAndType" resultType="int">
		select count(1) from ExtRedPackage where
		type = #{type}
		and created &gt;=#{beginTime}
		and created &lt;=#{endTime} and customerid =#{customerId}
		and SheepOrderId>=0
	</select>

    <select id="countExtRedPackageByBeginTimeAndEndTimeAndType" resultType="int">
		select count(1) from ExtRedPackage where
		type = #{type}
		and created >=#{beginTime}
		and created &lt;=#{endTime}
		and SheepOrderId>=0
	</select>

    <select id="countLtPriceExtRedPackageByBeginTimeAndEndTimeAndType" resultType="int">
		select count(1) from ExtRedPackage where
		type = #{type}
		and created &gt;=#{beginTime}
		and price &lt;=#{price}
		and created &lt;=#{endTime}
		and SheepOrderId>=0
	</select>

    <update id="updateExtRedPackageExpTimeByCustomerIdAndId">
		update ExtRedPackage set exptime = #{expTime} where
		id =#{id}
		and customerid = #{customerId}
	</update>

    <select id="getEffectiveExtRedPackageByCustomerIdAndIds" resultType="ExtRedPackage">
        select * from ExtRedPackage where customerid = #{customerId}
        and expTime>now()
        and isused = 0
        and IsLock = 0
        and SheepOrderId>=0
        and id in
        <foreach collection="ids" item="item" index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>
        order by expTime desc
    </select>

    <update id="updateExtRedPackageIsUsedByCustomerIdAndIds">
        UPDATE ExtRedPackage set IsUsed =1 ,SheepOrderId = -1 where customerid = #{customerId}
        and isused = 0
        and IsLock = 0
        and id in
        <foreach collection="ids" item="item" index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </update>

    <select id="pageEffectiveExtRedPackageByCustomerIdOrderByType" resultType="ExtRedPackage">
        select * from ExtRedPackage where
        customerid = #{customerId}
        and expTime>now()
        and isused = 0
        and SheepOrderId>=0
        and IsLock = 0
        <choose>
            <when test="type == 'ExpTime'">
                order by expTime ASC
            </when>
            <otherwise>
                order by price DESC
            </otherwise>
        </choose>
    </select>

    <select id="getByCustomerIdOrderByType" resultType="ExtRedPackage">
        SELECT * from ExtRedPackage WHERE
        customerid = #{customerId}
        AND expTime>now()
        AND isused = 0
        AND IsLock = 0
        AND SheepOrderId>=0
        <choose>
            <when test="type == 'ExpTime'">
                order by expTime asc
            </when>
            <otherwise>
                order by price desc
            </otherwise>
        </choose>
    </select>

    <select id="pageEffectiveByCustomerIdAndPrice" resultType="ExtRedPackage">
        SELECT * from ExtRedPackage WHERE
        customerid = #{customerId}
        AND expTime>now()
        AND IsUsed = 0
        AND IsLock = 0
        AND SheepOrderId>=0
        <choose>
            <when test="price == 0">
                <![CDATA[ AND price<>8 AND price<>5 AND price<>2 ]]>
            </when>
            <otherwise>
                AND price = #{price}
            </otherwise>
        </choose>
        order by price desc
    </select>

    <select id="pageEffectiveHistoryByCustomerIdOrderByType" resultType="ExtRedPackage">
        <!-- 历史红包（近一个月） -->
        SELECT * FROM ExtRedPackage
        WHERE customerid = #{customerId}
        AND Created > #{created} AND ((isused=0 and ExpTime &lt; #{expTime}) OR (IsUsed = 1 AND Created > #{created}))
        AND IsLock = 0
        AND SheepOrderId>=0
        <choose>
            <when test="type == 'ExpTime'">
                order by expTime desc
            </when>
            <otherwise>
                order by price desc
            </otherwise>
        </choose>
    </select>

    <select id="pageEffectiveEarlierHistoryByCustomerIdOrderByType" resultType="ExtRedPackage">
        <!-- 历史红包（一个月更早） -->
        SELECT * FROM ExtRedPackage
        WHERE customerid = #{customerId}
        AND Created &lt; #{created} AND ((isused=0 AND ExpTime &lt; #{expTime}) OR (IsUsed = 1 AND Created &lt;
        #{created}))
        AND IsLock = 0
        AND SheepOrderId>=0
        <choose>
            <when test="type == 'ExpTime'">
                order by expTime desc
            </when>
            <otherwise>
                order by price desc
            </otherwise>
        </choose>
    </select>

    <select id="getById" resultType="ExtRedPackage">
        SELECT * FROM ExtRedPackage
        WHERE Id = #{id}
    </select>

    <select id="getByCustomerIdGroupByPrice" resultType="ExtRedPackageGroup">
        SELECT Price,Type,COUNT(1) AS TotalCount,ExpTime,SUM(IsNew) AS NewCount,SUM(Price) AS TotalPrice FROM ExtRedPackage
        WHERE customerid = #{customerId}
        AND expTime>now()
        AND IsUsed = 0
        AND IsLock = 0
        AND SheepOrderId>=0
        GROUP BY Price
        ORDER BY Price DESC
    </select>

    <select id="pageEffectiveHistoryByCustomerIdOrderByPrice" resultType="ExtRedPackage">
        <!-- 历史红包（按金额排序） -->
        SELECT * FROM ExtRedPackage
        WHERE customerid = #{customerId}
        AND IsLock = 0
        AND SheepOrderId>=0
        AND (ExpTime &lt;= #{expTime} or IsUsed = 1)
        ORDER BY Price DESC
    </select>

    <update id="updateIsNewByCustomerIdAndId">
        <!-- 取消最新标志 -->
        update ExtRedPackage
        set IsNew =#{isNew}
        where id=#{id}
        and customerid = #{customerId}
    </update>
</mapper>
